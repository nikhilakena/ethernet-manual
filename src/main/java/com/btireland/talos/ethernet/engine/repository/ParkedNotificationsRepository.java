package com.btireland.talos.ethernet.engine.repository;

import com.btireland.talos.ethernet.engine.domain.Orders;
import com.btireland.talos.ethernet.engine.domain.ParkedNotifications;
import org.springframework.data.jpa.repository.Query;

import java.util.List;

public interface ParkedNotificationsRepository extends JpaRsqlRepository<ParkedNotifications, Long> {

    /**
     * Standard query method. The implementation will be generated by Spring.
     * Have a look here for further info https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories
     *
     * @param orderId order_id of the wag.order
     * @return The {@link ParkedNotifications} matching orderId or null if not found
     */


 
    ParkedNotifications findFirstByOrdersWagOrderIdAndProcessedStatusOrderByReceivedAtAsc(Long orderId, String processedStatus);

    ParkedNotifications findFirstByOrdersWagOrderIdAndNotificationTypeAndProcessedStatusOrderByReceivedAtAsc(Long orderId, String NotificationType,  String processedStatus);


    @Query("select distinct(pn.orders) from ParkedNotifications pn where pn.processedStatus='U' and (pn.orders.pausedOnErrorFlag is null or pn.orders.pausedOnErrorFlag<>1)  and pn.orders.orderStatus != 'talos complete'")
    List<Orders> findAllActiveOrders();

    @Query("select count(1) from ParkedNotifications pn where pn.processedStatus='U' and (pn.orders.pausedOnErrorFlag is null or pn.orders.pausedOnErrorFlag<>1)")
    long countByActiveParkedNotification();


}