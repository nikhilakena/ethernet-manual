# ===================================================================
# Spring Boot configuration for the "prod" profile.
#
# This configuration overrides the application.yml file.
#
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name},%X{correlation_id:-},%X{X-B3-TraceId:-},%X{X-B3-SpanId:-}] --- [%15.15t] %-40.40logger{39} : %replace(%m%wEx){'\n','\r'}%nopex%n"
  level:
    ROOT: INFO
    org.zalando.logbook.Logbook: TRACE

management:
  endpoints:
    web:
      exposure:
        include: [ 'configprops', 'env', 'health', 'info', 'logfile', 'loggers', 'prometheus', 'threaddump', 'flyway', 'startup' ]
  server:
    port: 8081

spring:
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false
  datasource:
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
  jpa:
    show-sql: false
    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
  artemis:
    # For high availability operation, the client needs to be configured with all the nodes of the cluster, here
    # we are only configuring one.
    host: talos-amq-acceptor-0-svc.tools
    mode: NATIVE
    # Username/password auto-generated by the AMQ Operator and stored in the talos-amq-credentials-secret.
    user: talos_dev_amq_test
    password: talos_dev_amq_test
    # Port configured in the operator.
    port: 61626
    embedded:
      enabled: false


# ===================================================================
# To enable TLS in production, generate a certificate using:
# keytool -genkey -alias voip-access-manager -storetype PKCS12 -keyalg RSA -keysize 2048 -keystore keystore.p12 -validity 3650
#
# You can also use Let's Encrypt:
# https://maximilian-boehm.com/hp2121/Create-a-Java-Keystore-JKS-from-Let-s-Encrypt-Certificates.htm
#
# Then, modify the server.ssl properties so your "server" configuration looks like:
#
# server:
#    port: 443
#    ssl:
#        key-store: classpath:config/tls/keystore.p12
#        key-store-password: password
#        key-store-type: PKCS12
#        key-alias: voip-access-manager
#        # The ciphers suite enforce the security by deactivating some old and deprecated SSL cipher, this list was tested against SSL Labs (https://www.ssllabs.com/ssltest/)
#        ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 ,TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 ,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_DHE_RSA_WITH_AES_128_CBC_SHA256,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA256,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_RSA_WITH_CAMELLIA_256_CBC_SHA,TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA,TLS_RSA_WITH_CAMELLIA_128_CBC_SHA
# ===================================================================
server:
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024

# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration
#
# ===================================================================

# application:
application:
  artemis-ha:
    enabled: true
    brokers:
      broker1:
        host: localhost
        port: 61616
      broker2:
        host: localhost
        port: 61617
    user: admin
    password: admin
    retry-interval: 1000
    retry-interval-multipler: 1.0
    reconnect-attempts: 3
    initial-connect-attempts: 3
    client-failure-check-period: 5000
    call-timeout: 5000
    call-failover-timeout: 5000
    connection-cache-size: 0
    use-topology-load-balancing: true

